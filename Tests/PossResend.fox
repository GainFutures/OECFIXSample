//
//	Sends several Futures orders with different values of PossResend flag. 
//

order1 = New BUY 10 'ESM1' LMT 666;		//	Send order without PossResend

	pending1 = Wait ExecutionReport, ClOrdID == order1.ClOrdID;
	Ensure pending1 != null, 'ExecReport not received';
	EnsureOrderStatus pending1 FIX.OrdStatus.PENDING_NEW;

	accepted1 = Wait ExecutionReport, ClOrdID == order1.ClOrdID;
	Ensure accepted1 != null, 'ExecReport not received';
	EnsureOrderStatus accepted1 FIX.OrdStatus.NEW;


order2 = New BUY 10 'ESM1' LMT 666, PossResend = false;		//	Send order with PossResend=False

	pending2 = Wait ExecutionReport, ClOrdID == order2.ClOrdID;
	Ensure pending2 != null, 'ExecReport not received';
	EnsureOrderStatus pending2 FIX.OrdStatus.PENDING_NEW;

	accepted2 = Wait ExecutionReport, ClOrdID == order2.ClOrdID;
	Ensure accepted2 != null, 'ExecReport not received';
	EnsureOrderStatus accepted2 FIX.OrdStatus.NEW;


order21 = New BUY 10 'ESM1' LMT 666, PossResend = true, ClOrdID = order2.ClOrdID;		//	Send order with PossResend=True and existing ClOrdID

	status21 = Wait ExecutionReport, ClOrdID == order21.ClOrdID;
	Ensure status21 != null, 'ExecReport not received';
	Ensure status21.OrdStatus == accepted2.OrdStatus, 'OrdStatus must be {0}', accepted2.OrdStatus;
	Ensure status21.ExecType == FIX.ExecType.ORDER_STATUS, 'ExecType must be ORDER_STATUS';


order3 = New BUY 10 'ESM1' LMT 666, PossResend = true;		//	Send order with PossResend=True and new ClOrdID

	pending3 = Wait ExecutionReport, ClOrdID == order3.ClOrdID;
	Ensure pending3 != null, 'ExecReport not received';
	EnsureOrderStatus pending3 FIX.OrdStatus.PENDING_NEW;

	accepted3 = Wait ExecutionReport, ClOrdID == order3.ClOrdID;
	Ensure accepted3 != null, 'ExecReport not received';
	EnsureOrderStatus accepted3 FIX.OrdStatus.NEW;


order31 = New BUY 10 'ESM1' LMT 666, ClOrdID = order3.ClOrdID;		//	Send order without PossResend and existing ClOrdID

	rejected31 = Wait ExecutionReport, ClOrdID == order31.ClOrdID;
	Ensure rejected31 != null, 'ExecReport not received';
	EnsureOrderStatus rejected31 FIX.OrdStatus.REJECTED;



cancel1 = Cancel order1;

	pending1 = Wait ExecutionReport, ClOrdID == cancel1.ClOrdID;
	Ensure pending1 != null, 'ExecReport not received';
	EnsureOrderStatus pending1 FIX.OrdStatus.PENDING_CANCEL;

	accepted1 = Wait ExecutionReport, ClOrdID == cancel1.ClOrdID;
	Ensure accepted1 != null, 'ExecReport not received';
	EnsureOrderStatus accepted1 FIX.OrdStatus.CANCELED;


cancel2 = Cancel order2;

	pending2 = Wait ExecutionReport, ClOrdID == cancel2.ClOrdID;
	Ensure pending2 != null, 'ExecReport not received';
	EnsureOrderStatus pending2 FIX.OrdStatus.PENDING_CANCEL;

	accepted2 = Wait ExecutionReport, ClOrdID == cancel2.ClOrdID;
	Ensure accepted2 != null, 'ExecReport not received';
	EnsureOrderStatus accepted2 FIX.OrdStatus.CANCELED;


cancel3 = Cancel order3;

	pending3 = Wait ExecutionReport, ClOrdID == cancel3.ClOrdID;
	Ensure pending3 != null, 'ExecReport not received';
	EnsureOrderStatus pending3 FIX.OrdStatus.PENDING_CANCEL;

	accepted3 = Wait ExecutionReport, ClOrdID == cancel3.ClOrdID;
	Ensure accepted3 != null, 'ExecReport not received';
	EnsureOrderStatus accepted3 FIX.OrdStatus.CANCELED;

